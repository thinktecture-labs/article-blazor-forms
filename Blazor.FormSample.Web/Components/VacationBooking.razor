@inject IStringLocalizer<Resource> Localizer

<div class="booking-card">
    <h1>Urlaub<span>Buchen wir einen Flug zusammen :-)</span></h1>
    <EditForm @ref="_editForm" Model="@Model" OnSubmit="context => Submit(context)">
        <DataAnnotationsValidator/>
        <FluentValidator/>
        <div class="section"><span>1</span>Persönliche Daten:</div>
        <div class="inner-wrap">
            <label>Vorname: <InputText id="firstName" @bind-Value="Model.FirstName"/></label>
            <ValidationMessage For="() => Model.FirstName"/>
            <label>Nachname: <InputText @bind-Value="Model.LastName"/></label>
            <ValidationMessage For="() => Model.LastName"/>
            <label>Geburtsdatum: <InputDate @bind-Value="Model.BirthDate"/></label>
            <ValidationMessage For="() => Model.BirthDate"/>
            <label>Straße, Nr.: <InputText @bind-Value="Model.Street"/></label>
            <label>Stadt: <InputText @bind-Value="Model.City"/></label>
            <label>Telefon: <InputText @bind-Value="Model.PhoneNumber"/></label>
        </div>
        <div class="section"><span>1</span>Reisedaten:</div>
        <div class="inner-wrap">
            <label>Anreise Datum: <InputDate @bind-Value="Model.StartVacationDate"/></label>
            <ValidationMessage For="@(() => Model.StartVacationDate)"/>
            <label style="display: flex">Nur Hinflug: <InputCheckbox style="margin: 1px 5px 0" @bind-Value="Model.OnlyOutboundFlight"/></label>
            @if (!Model.OnlyOutboundFlight)
            {
                <label>Abreise Datum: <InputDate @bind-Value="Model.EndVacationDate"/></label>
                <ValidationMessage For="@(() => Model.EndVacationDate)"/>
            }
        </div>
        <div class="section"><span>2</span>Flugdaten:</div>
        <div class="inner-wrap">
            <InputAirport @bind-Value="Model.FromAirport" CountryLabel="Von: " AirportLabel="Anreise Flughafen: "/>
            <ValidationMessage For="() => Model.FromAirport"/>
            <InputAirport @bind-Value="Model.ToAirport" CountryLabel="Nach: " AirportLabel="Abreise Flughafen: "/>
            <ValidationMessage For="() => Model.ToAirport"/>
        </div>
        <div class="section"><span>3</span>Reiseklasse:</div>
        <div class="inner-wrap">
            <label>
                <InputSelect @bind-Value="Model.TravelClass">
                    @foreach (var value in Enum.GetValues(typeof(TravelClass)))
                    {
                        <option>@value</option>
                    }
                </InputSelect>
                <ValidationMessage For="() => Model.TravelClass"/>
            </label>
        </div>
        <div class="section"><span>4</span>Reisende:</div>
        <div class="inner-wrap">
            <label>
                Erwachsene:
                <InputNumber @bind-Value="Model.Adults"></InputNumber>
            </label>
            <label>
                Kinder über 3 Jahr:
                <InputNumber @bind-Value="Model.KidsAboveThreeYears"></InputNumber>
            </label>
            <label>
                Kinder bis zu 3 Jahr:
                <InputNumber @bind-Value="Model.KidsBelowThreeYears"></InputNumber>
            </label>
        </div>
        <div class="d-flex flex-row-reverse py-2 px-1">
            <input type="submit" name="Absenden"/>
            <input class="mr-4" type="reset" name="Zurücksetzen"/>
        </div>
    </EditForm>
</div>